Перем ИмяПроверки;
Перем ТекстОшибки;

Перем ТаблицаОшибок;
Перем Результат;
Перем РегулярноеВыражение;

Процедура ПриСозданииОбъекта()
	ИмяПроверки = "HardcodeIpAddress";
	ТекстОшибки = "Небезопасно хранить ip-адреса в коде";

	РегулярноеВыражение = Новый РегулярноеВыражение("(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)");
	РегулярноеВыражение.Многострочный = Истина;
	РегулярноеВыражение.ИгнорироватьРегистр = Истина;
КонецПроцедуры

Процедура Открыть(Парсер, Параметры) Экспорт
	Результат = Новый Массив;
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
КонецПроцедуры

Функция Закрыть() Экспорт
	Возврат СтрСоединить(Результат);
КонецФункции

Функция Подписки() Экспорт
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьВыражениеСтроковое");
	Возврат Подписки;
КонецФункции

Процедура ПосетитьВыражениеСтроковое(ВыражениеСтроковое) Экспорт
	Если ВыражениеСтроковое.Элементы.Количество() > 0 Тогда
		Элемент = ВыражениеСтроковое.Элементы[0];
		Если ВСтрокеЕстьСетевойАдрес(Элемент.Значение) Тогда
			Ошибка(ТекстОшибки, ВыражениеСтроковое.Начало, ВыражениеСтроковое.Конец);	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Ошибка(Текст, Начало, Конец = Неопределено, ЕстьЗамена = Ложь)
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = ИмяПроверки;
	Ошибка.Текст = Текст;
	Ошибка.ПозицияНачала = Начало.Позиция;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если Конец = Неопределено Или Конец = Начало Тогда
		Ошибка.ПозицияКонца = Начало.Позиция + Начало.Длина;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Ошибка.ПозицияКонца = Конец.Позиция + Конец.Длина;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
	Ошибка.ЕстьЗамена = ЕстьЗамена;
КонецПроцедуры

Функция ВСтрокеЕстьСетевойАдрес(Знач ВходящееЗначение)
	Возврат РегулярноеВыражение.НайтиСовпадения(ВходящееЗначение).Количество() > 0;
КонецФункции