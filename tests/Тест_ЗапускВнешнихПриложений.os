#использовать "../src/core"
#Использовать asserts
#Использовать logos

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;	
	ИменаТестов = Новый Массив;
	ИменаТестов.Добавить("ТестДолжен_ПроверитьСрабатыванияПроверки");
	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПроверитьСрабатыванияПроверки() Экспорт

	Проверка = Новый ЗапускВнешнихПриложений;
	ИмяФайла = ОбъединитьПути(".", "tests", "checks", "ЗапускВнешнихПриложений.os");

	Парсер = Новый ПарсерВстроенногоЯзыка;
	Проверки = Новый Массив;
	Проверки.Добавить(Проверка);
	Парсер.Пуск(Вспомогательный.СодержимоеФайла(ИмяФайла), Проверки);

	ТаблицаОшибок = ТаблицаОшибокПоПроверке(Парсер.ТаблицаОшибок(), Проверка.ИмяПроверки);
	Ожидаем.Что(ТаблицаОшибок.Количество(), "Количество замечаний должено быть равно 6").Равно(6);

КонецПроцедуры

Функция ТаблицаОшибокПоПроверке(ВходящаяТаблица, ИмяПроверки)
	Таблица = ВходящаяТаблица.Скопировать();
	
	МассивУдаления = Новый Массив;
	Для Каждого Строка Из Таблица Цикл
		Если Не Строка.Источник = ИмяПроверки Тогда
			МассивУдаления.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из МассивУдаления Цикл
		Таблица.Удалить(Строка);
	КонецЦикла;

	Возврат Таблица;
КонецФункции